name: Deploy

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  Build:
    name: 📦️ Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16.x"
          cache: "yarn"
      - name: 📦️ YARN # 安装依赖
        run: yarn install
      - name: 🚀 Build # 构建
        env:
          TencentCDN_PKEY: ${{ secrets.TENCENTCDN_PKEY }}
        run: yarn build
      - name: ⬆️ Upload dist # 上传 dist
        uses: actions/upload-pages-artifact@v1
        with:
          path: "./dist/"

  Cloudflare:
    needs: Build
    name: 🚀 Deploy Cloudflare Worker Site
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16.x"
          cache: "yarn"
      - name: 📦️ YARN # 安装依赖
        run: yarn install
      - name: ⬇️ Download dist # 下载 dist
        uses: actions/download-artifact@v3
        with:
          name: github-pages
          path: "./dist/"
      - name: 📦️ Decompress # 解压
        run: |
          cd dist
          tar -xvf artifact.tar
          rm artifact.tar
      - name: 🚀 Deploy # 部署
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }} # Cloudflare Token
        run: yarn deploy-only

  Github:
    needs: Build
    name: 🚀 Deploy Github Page
    permissions:
      contents: read
      pages: write
      id-token: write
    concurrency:
      group: "pages"
      cancel-in-progress: false
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: 🔧 Setup Pages # 初始化
        uses: actions/configure-pages@v3
      - name: 🚀 Deploy # 部署
        id: deployment
        uses: actions/deploy-pages@v2
  
  
  Sentry:
    needs: [Cloudflare, Github]
    name: 🔖 Create Sentry release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: ⬇️ Download dist # 下载 dist
        uses: actions/download-artifact@v3
        with:
          name: github-pages
          path: "./dist/"
      - name: 📦️ Decompress # 解压
        run: |
          cd dist
          tar -xvf artifact.tar
          rm artifact.tar
      - name: 🔖 Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: production
          sourcemaps: ./dist/map/
